{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import'./App.css';// Imported BooksAPI as suggested.\nimport*as BooksAPI from'./BooksAPI';import{Route}from'react-router-dom';import{HashRouter as Router}from'react-router-dom';import BookShelf from'./BookShelf';import SearchOption from'./SearchOption';// State with all books.\nvar BooksApp=/*#__PURE__*/function(_React$Component){_inherits(BooksApp,_React$Component);function BooksApp(){var _getPrototypeOf2;var _this;_classCallCheck(this,BooksApp);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={books:[]};_this.changeShelf=function(targetBook,targetShelf){BooksAPI.update(targetBook,targetShelf).then(function(){targetBook.shelf=targetShelf;_this.setState({// Place the book at respective shelf.\nbooks:_this.state.books.filter(function(t){return t.id!==targetBook.id;}).concat(targetBook)});});};return _this;}_createClass(BooksApp,[{key:\"componentDidMount\",// Render books that are currently at shelves.\nvalue:function componentDidMount(){var _this2=this;BooksAPI.getAll().then(function(books){_this2.setState({books:books});});}// A function that changes shelf based on initial value.\n},{key:\"render\",value:function render(){var _this3=this;// Currently available shelves and their names.\nvar bookStatus=[{status:'currentlyReading',statusName:'Currently Reading'},{status:'wantToRead',statusName:'Want to Read'},{status:'read',statusName:'Read'}];// Here application starts.\nreturn React.createElement(\"div\",{className:\"app\"},React.createElement(\"div\",{className:\"open-search\"},React.createElement(\"a\",{href:\"/search\"},\" Add a book \")),\" \",\" \",React.createElement(Route,{exact:true,path:\"/\",render:function render(){return React.createElement(\"div\",{className:\"list-books\"},React.createElement(\"div\",{className:\"list-books-title\"},React.createElement(\"h1\",null,\" MyReads \"),\" \"),\" \",React.createElement(\"div\",{className:\"list-books-content\"},\" \",\" \",React.createElement(\"div\",null,\" \",bookStatus.map(function(shelf,iteration){var books=_this3.state.books.filter(function(book){return book.shelf===shelf.status;});return React.createElement(BookShelf,{key:shelf.status,books:books,shelf:shelf.statusName,changeShelf:_this3.changeShelf});}),\" \"),\" \"),\" \");}}),\" \",\" \",React.createElement(Route,{exact:true,path:\"/search\",render:function render(){return React.createElement(\"div\",{className:\"search-books\"},React.createElement(\"div\",{className:\"search-books-bar\"},React.createElement(\"a\",{className:\"close-search\",href:\"/\"},\" Close \"),\" \",React.createElement(\"div\",{className:\"search-books-input-wrapper\"},React.createElement(SearchOption,{type:\"text\",placeholder:\"Search by title or author\",books:_this3.state.books,changeShelf:_this3.changeShelf}),\" \"),\" \"),\" \",React.createElement(\"div\",{className:\"search-books-results\"},React.createElement(\"ol\",{className:\"books-grid\"},\" \"),\" \"),\" \");}}),\" \");}}]);return BooksApp;}(React.Component);export default BooksApp;","map":{"version":3,"sources":["C:/Users/kmega/Desktop/MyReads-App/my-project/src/App.js"],"names":["React","BooksAPI","Route","HashRouter","Router","BookShelf","SearchOption","BooksApp","state","books","changeShelf","targetBook","targetShelf","update","then","shelf","setState","filter","t","id","concat","getAll","bookStatus","status","statusName","map","iteration","book","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n// Imported BooksAPI as suggested.\r\nimport * as BooksAPI from './BooksAPI';\r\nimport { Route } from 'react-router-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport BookShelf from './BookShelf';\r\nimport SearchOption from './SearchOption';\r\n// State with all books.\r\nclass BooksApp extends React.Component {\r\n    state = {\r\n        books: []\r\n    }\r\n    // Render books that are currently at shelves.\r\n    componentDidMount() {\r\n        BooksAPI.getAll().then((books) => {\r\n            this.setState({\r\n                books\r\n            });\r\n        })\r\n    }\r\n    // A function that changes shelf based on initial value.\r\n    changeShelf = (targetBook, targetShelf) => {\r\n        BooksAPI.update(targetBook, targetShelf).then(() => {\r\n            targetBook.shelf = targetShelf\r\n            this.setState({\r\n                // Place the book at respective shelf.\r\n                books: this.state.books.filter((t) => t.id !== targetBook.id).concat(targetBook)\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        // Currently available shelves and their names.\r\n        const bookStatus = [{\r\n                status: 'currentlyReading',\r\n                statusName: 'Currently Reading'\r\n            },\r\n            {\r\n                status: 'wantToRead',\r\n                statusName: 'Want to Read'\r\n            },\r\n            {\r\n                status: 'read',\r\n                statusName: 'Read'\r\n            }\r\n        ];\r\n        // Here application starts.\r\n        return ( <\r\n            div className = 'app' >\r\n            <\r\n            div className = \"open-search\" >\r\n            <\r\n            a href = '/search' > Add a book < /a>\r\n\t\t\t\t\t\t< /div> { /* Creating main route for rendering purposes. */ } <\r\n            Route exact path = '/'\r\n            render = {\r\n                () => ( <\r\n                    div className = 'list-books' >\r\n                    <\r\n                    div className = 'list-books-title' >\r\n                    <\r\n                    h1 > MyReads < /h1> <\r\n                    /div> <\r\n                    div className = 'list-books-content' > { /* Render books that initially are at begining. */ } <\r\n                    div > {\r\n                        bookStatus.map((shelf, iteration) => {\r\n                            const books = this.state.books.filter(book => book.shelf === shelf.status)\r\n                            return ( <\r\n                                BookShelf key = {\r\n                                    shelf.status\r\n                                }\r\n                                books = {\r\n                                    books\r\n                                }\r\n                                shelf = {\r\n                                    shelf.statusName\r\n                                }\r\n                                changeShelf = {\r\n                                    this.changeShelf\r\n                                }\r\n                                />\r\n                            );\r\n                        })\r\n                    } < /div> <\r\n                    /div> <\r\n                    /div>\r\n                )\r\n            }/> { /* Creating main route for rendering purposes. */ } <\r\n            Route exact path = '/search'\r\n            render = {\r\n                () => ( <\r\n                    div className = \"search-books\" >\r\n                    <\r\n                    div className = \"search-books-bar\" >\r\n                    <\r\n                    a className = \"close-search\"\r\n                    href = '/' > Close < /a> <\r\n                    div className = \"search-books-input-wrapper\" >\r\n                    <\r\n                    SearchOption type = \"text\"\r\n                    placeholder = \"Search by title or author\"\r\n\t\t\t\t\t\t\t\t\t\tbooks = {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.state.books\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                    changeShelf = {\r\n                        this.changeShelf\r\n                    }\r\n                    /> <\r\n                    /div> <\r\n                    /div> <\r\n                    div className = \"search-books-results\" >\r\n                    <\r\n                    ol className = \"books-grid\" > < /ol> <\r\n                    /div> <\r\n                    /div>\r\n                )\r\n            }\r\n            /> <\r\n            /div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BooksApp\r\n"]},"metadata":{},"sourceType":"module"}