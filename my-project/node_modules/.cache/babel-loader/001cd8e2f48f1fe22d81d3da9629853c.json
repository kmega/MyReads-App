{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\src\\\\SearchOption.js\";\nimport React, { Component } from \"react\"; // Imported BooksAPI for search option to work.\n\nimport * as BooksAPI from \"./BooksAPI\";\nimport Book from \"./Book\"; // Component responsible for searching books.\n\nclass SearchOption extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: \"\",\n      searchResults: [],\n      showNothing: false\n    };\n\n    this.search = event => {\n      const query = event.target.value.trim();\n      this.setState({\n        query: query\n      }); // If user typed then start the search.\n\n      if (query) {\n        BooksAPI.search(query).then(notInShelves => {\n          // If no error occurred proceed.\n          if (!notInShelves.error) {\n            // Compare shelves in order to display correct books.\n            notInShelves.forEach(newBook => {\n              this.props.books.forEach(onShelf => {\n                if (onShelf.id === newBook.id) {\n                  newBook.shelf = onShelf.shelf;\n                } else {\n                  newBook.shelf = \"none\";\n                }\n              });\n            }); // After comparing show all books\n\n            this.setState({\n              searchResults: notInShelves,\n              showNothing: false\n            });\n          } // If search terms aren't met or books can't be found then show empty page.\n          else {\n              this.setState({\n                searchResults: [],\n                showNothing: true\n              });\n            }\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      changeShelf\n    } = this.props;\n    return React.createElement(\"section\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by Title or Author\",\n      value: this.state.query,\n      onChange: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"books-search-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.searchResults.map(book => React.createElement(Book, {\n      key: book.id,\n      book: book,\n      changeShelf: changeShelf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default SearchOption;","map":{"version":3,"sources":["C:/Users/kmega/Desktop/MyReads-App/my-project/src/SearchOption.js"],"names":["React","Component","BooksAPI","Book","SearchOption","state","query","searchResults","showNothing","search","event","target","value","trim","setState","then","notInShelves","error","forEach","newBook","props","books","onShelf","id","shelf","render","changeShelf","map","book"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;AACA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEnCI,KAFmC,GAE3B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,aAAa,EAAE,EAFT;AAGNC,MAAAA,WAAW,EAAE;AAHP,KAF2B;;AAAA,SAQnCC,MARmC,GAQ1BC,KAAK,IAAI;AAChB,YAAMJ,KAAK,GAAGI,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,EAAd;AACA,WAAKC,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAEA;AADK,OAAd,EAFgB,CAKhB;;AACA,UAAIA,KAAJ,EAAW;AACTJ,QAAAA,QAAQ,CAACO,MAAT,CAAgBH,KAAhB,EAAuBS,IAAvB,CAA4BC,YAAY,IAAI;AAC1C;AACA,cAAI,CAACA,YAAY,CAACC,KAAlB,EAAyB;AACvB;AACAD,YAAAA,YAAY,CAACE,OAAb,CAAqBC,OAAO,IAAI;AAC9B,mBAAKC,KAAL,CAAWC,KAAX,CAAiBH,OAAjB,CAAyBI,OAAO,IAAI;AAClC,oBAAIA,OAAO,CAACC,EAAR,KAAeJ,OAAO,CAACI,EAA3B,EAA+B;AAC7BJ,kBAAAA,OAAO,CAACK,KAAR,GAAgBF,OAAO,CAACE,KAAxB;AACD,iBAFD,MAEO;AACLL,kBAAAA,OAAO,CAACK,KAAR,GAAgB,MAAhB;AACD;AACF,eAND;AAOD,aARD,EAFuB,CAWvB;;AACA,iBAAKV,QAAL,CAAc;AACZP,cAAAA,aAAa,EAAES,YADH;AAEZR,cAAAA,WAAW,EAAE;AAFD,aAAd;AAID,WAhBD,CAiBA;AAjBA,eAkBK;AACH,mBAAKM,QAAL,CAAc;AACZP,gBAAAA,aAAa,EAAE,EADH;AAEZC,gBAAAA,WAAW,EAAE;AAFD,eAAd;AAID;AACF,SA1BD;AA2BD;AACF,KA3CkC;AAAA;;AA4CnCiB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAkB,KAAKN,KAA7B;AACA,WACE;AAAS,MAAA,SAAS,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,2BAFd;AAGE,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,KAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKG,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKJ,KAAL,CAAWE,aAAX,CAAyBoB,GAAzB,CAA6BC,IAAI,IAChC,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACL,EAAhB;AAAoB,MAAA,IAAI,EAAEK,IAA1B;AAAgC,MAAA,WAAW,EAAEF,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CAPF,CADF;AAgBD;;AA9DkC;;AAiErC,eAAetB,YAAf","sourcesContent":["import React, { Component } from \"react\";\r\n// Imported BooksAPI for search option to work.\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport Book from \"./Book\";\r\n// Component responsible for searching books.\r\nclass SearchOption extends Component {\r\n  // State with user input.\r\n  state = {\r\n    query: \"\",\r\n    searchResults: [],\r\n    showNothing: false\r\n  };\r\n  // Search method for searching terms.\r\n  search = event => {\r\n    const query = event.target.value.trim();\r\n    this.setState({\r\n      query: query\r\n    });\r\n    // If user typed then start the search.\r\n    if (query) {\r\n      BooksAPI.search(query).then(notInShelves => {\r\n        // If no error occurred proceed.\r\n        if (!notInShelves.error) {\r\n          // Compare shelves in order to display correct books.\r\n          notInShelves.forEach(newBook => {\r\n            this.props.books.forEach(onShelf => {\r\n              if (onShelf.id === newBook.id) {\r\n                newBook.shelf = onShelf.shelf;\r\n              } else {\r\n                newBook.shelf = \"none\";\r\n              }\r\n            });\r\n          });\r\n          // After comparing show all books\r\n          this.setState({\r\n            searchResults: notInShelves,\r\n            showNothing: false\r\n          });\r\n        }\r\n        // If search terms aren't met or books can't be found then show empty page.\r\n        else {\r\n          this.setState({\r\n            searchResults: [],\r\n            showNothing: true\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { changeShelf } = this.props;\r\n    return (\r\n      <section className=\"app\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by Title or Author\"\r\n          value={this.state.query}\r\n          onChange={this.search}\r\n        />\r\n        <div className=\"books-search-grid\">\r\n\r\n          {this.state.searchResults.map(book => (\r\n            <Book key={book.id} book={book} changeShelf={changeShelf} />\r\n          ))}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchOption;\r\n"]},"metadata":{},"sourceType":"module"}