{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from\"react\";import coverNotAvailable from\"./icons/cover-no-available-image.png\";// Component responsible for rendering books.\nvar Book=/*#__PURE__*/function(_React$Component){_inherits(Book,_React$Component);function Book(){_classCallCheck(this,Book);return _possibleConstructorReturn(this,_getPrototypeOf(Book).apply(this,arguments));}_createClass(Book,[{key:\"render\",// PropTypes for proper data definition.\nvalue:function render(){var _this$props=this.props,book=_this$props.book,changeShelf=_this$props.changeShelf;// If image is not available then use \"no cover image\".\nvar coverSetup=book.imageLinks&&book.imageLinks.thumbnail?book.imageLinks.thumbnail:coverNotAvailable;return(// Creating books.\nReact.createElement(\"li\",null,React.createElement(\"div\",{className:\"book\"},React.createElement(\"div\",{className:\"book-top\"},React.createElement(\"div\",{className:\"book-cover\"},React.createElement(\"img\",{src:coverSetup,alt:\"\".concat(book.title,\" cover\")})),React.createElement(\"div\",{className:\"book-shelf-changer\"},React.createElement(\"select\",{value:book.shelf,onChange:function onChange(event){return changeShelf(book,event.target.value);}},React.createElement(\"option\",{value:\"move\",disabled:true},\"Move to...\"),React.createElement(\"option\",{value:\"none\"},\" None \"),React.createElement(\"option\",{value:\"currentlyReading\"},\" Currently Reading \"),React.createElement(\"option\",{value:\"wantToRead\"},\" Want to Read \"),React.createElement(\"option\",{value:\"read\"},\" Read \")))),React.createElement(\"h3\",{className:\"book-title\"},\" \",book.title,\" \"),React.createElement(\"h4\",{className:\"book-authors\"},\" \",book.authors,\" \"))));}}]);return Book;}(React.Component);export default Book;","map":{"version":3,"sources":["C:/Users/kmega/Desktop/MyReads-App/my-project/src/Book.js"],"names":["React","coverNotAvailable","Book","props","book","changeShelf","coverSetup","imageLinks","thumbnail","title","shelf","event","target","value","authors","Component"],"mappings":"srBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,sCAA9B,CAEA;GACMC,CAAAA,I,2OACJ;uBAIS,iBACuB,KAAKC,KAD5B,CACCC,IADD,aACCA,IADD,CACOC,WADP,aACOA,WADP,CAEP;AACA,GAAMC,CAAAA,UAAU,CACdF,IAAI,CAACG,UAAL,EAAmBH,IAAI,CAACG,UAAL,CAAgBC,SAAnC,CACIJ,IAAI,CAACG,UAAL,CAAgBC,SADpB,CAEIP,iBAHN,CAIA,MACE;AACA,8BACE,2BAAK,SAAS,CAAC,MAAf,EACE,2BAAK,SAAS,CAAC,UAAf,EACE,2BAAK,SAAS,CAAC,YAAf,EACE,2BAAK,GAAG,CAAEK,UAAV,CAAsB,GAAG,WAAKF,IAAI,CAACK,KAAV,UAAzB,EADF,CADF,CAIE,2BAAK,SAAS,CAAC,oBAAf,EAGE,8BACE,KAAK,CAAEL,IAAI,CAACM,KADd,CAEE,QAAQ,CAAE,kBAAAC,KAAK,QAAIN,CAAAA,WAAW,CAACD,IAAD,CAAOO,KAAK,CAACC,MAAN,CAAaC,KAApB,CAAf,EAFjB,EAIE,8BAAQ,KAAK,CAAC,MAAd,CAAqB,QAAQ,KAA7B,eAJF,CAQE,8BAAQ,KAAK,CAAC,MAAd,WARF,CASE,8BAAQ,KAAK,CAAC,kBAAd,wBATF,CAUE,8BAAQ,KAAK,CAAC,YAAd,mBAVF,CAWE,8BAAQ,KAAK,CAAC,MAAd,WAXF,CAHF,CAJF,CADF,CAwBE,0BAAI,SAAS,CAAC,YAAd,MAA6BT,IAAI,CAACK,KAAlC,KAxBF,CAyBE,0BAAI,SAAS,CAAC,cAAd,MAA+BL,IAAI,CAACU,OAApC,KAzBF,CADF,CAFF,EAgCD,C,kBA5CgBd,KAAK,CAACe,S,EA+CzB,cAAeb,CAAAA,IAAf","sourcesContent":["import React from \"react\";\r\nimport coverNotAvailable from \"./icons/cover-no-available-image.png\";\r\nimport PropTypes from \"prop-types\";\r\n// Component responsible for rendering books.\r\nclass Book extends React.Component {\r\n  // PropTypes for proper data definition.\r\n  static propTypes = {\r\n    book: PropTypes.object.isRequired\r\n  };\r\n  render() {\r\n    const { book, changeShelf } = this.props;\r\n    // If image is not available then use \"no cover image\".\r\n    const coverSetup =\r\n      book.imageLinks && book.imageLinks.thumbnail\r\n        ? book.imageLinks.thumbnail\r\n        : coverNotAvailable;\r\n    return (\r\n      // Creating books.\r\n      <li>\r\n        <div className=\"book\">\r\n          <div className=\"book-top\">\r\n            <div className=\"book-cover\">\r\n              <img src={coverSetup} alt={`${book.title} cover`}></img>\r\n            </div>\r\n            <div className=\"book-shelf-changer\">\r\n\r\n              {/* Creating options for books to move. */}\r\n              <select\r\n                value={book.shelf}\r\n                onChange={event => changeShelf(book, event.target.value)}\r\n              >\r\n                <option value=\"move\" disabled>\r\n\r\n                  Move to...\r\n                </option>\r\n                <option value=\"none\"> None </option>\r\n                <option value=\"currentlyReading\"> Currently Reading </option>\r\n                <option value=\"wantToRead\"> Want to Read </option>\r\n                <option value=\"read\"> Read </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          {/* Writing title and authors. */}\r\n          <h3 className=\"book-title\"> {book.title} </h3>\r\n          <h4 className=\"book-authors\"> {book.authors} </h4>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Book;\r\n"]},"metadata":{},"sourceType":"module"}