{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\src\\\\Book.js\";\nimport React from \"react\";\nimport coverNotAvailable from \"./icons/cover-no-available-image.png\";\nimport PropTypes from \"prop-types\"; // Component responsible for rendering books.\n\nclass Book extends React.Component {\n  // PropTypes for proper data definition.\n  render() {\n    const {\n      book,\n      changeShelf\n    } = this.props; // If image is not available then use \"no cover image\".\n\n    const coverSetup = book.imageLinks && book.imageLinks.thumbnail ? book.imageLinks.thumbnail : coverNotAvailable;\n    return (// Creating books.\n      React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"book-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"book-cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: coverSetup,\n        alt: `${book.title} cover`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"book-shelf-changer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        value: book.shelf,\n        onChange: event => changeShelf(book, event.target.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"move\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Move to...\"), React.createElement(\"option\", {\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \" None \"), React.createElement(\"option\", {\n        value: \"currentlyReading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \" Currently Reading \"), React.createElement(\"option\", {\n        value: \"wantToRead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \" Want to Read \"), React.createElement(\"option\", {\n        value: \"read\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \" Read \")))), React.createElement(\"h3\", {\n        className: \"book-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" \", book.title, \" \"), React.createElement(\"h4\", {\n        className: \"book-authors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \" \", book.authors, \" \")))\n    );\n  }\n\n}\n\nBook.propTypes = {\n  book: PropTypes.object.isRequired\n};\nexport default Book;","map":{"version":3,"sources":["C:/Users/kmega/Desktop/MyReads-App/my-project/src/Book.js"],"names":["React","coverNotAvailable","PropTypes","Book","Component","render","book","changeShelf","props","coverSetup","imageLinks","thumbnail","title","shelf","event","target","value","authors","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AACjC;AAIAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAwB,KAAKC,KAAnC,CADO,CAEP;;AACA,UAAMC,UAAU,GACdH,IAAI,CAACI,UAAL,IAAmBJ,IAAI,CAACI,UAAL,CAAgBC,SAAnC,GACIL,IAAI,CAACI,UAAL,CAAgBC,SADpB,GAEIV,iBAHN;AAIA,WACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEQ,UAAV;AAAsB,QAAA,GAAG,EAAG,GAAEH,IAAI,CAACM,KAAM,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE;AACE,QAAA,KAAK,EAAEN,IAAI,CAACO,KADd;AAEE,QAAA,QAAQ,EAAEC,KAAK,IAAIP,WAAW,CAACD,IAAD,EAAOQ,KAAK,CAACC,MAAN,CAAaC,KAApB,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAQE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,EASE;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BATF,EAUE;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVF,EAWE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,CAHF,CAJF,CADF,EAwBE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA6BV,IAAI,CAACM,KAAlC,MAxBF,EAyBE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA+BN,IAAI,CAACW,OAApC,MAzBF,CADF;AAFF;AAgCD;;AA5CgC;;AAA7Bd,I,CAEGe,S,GAAY;AACjBZ,EAAAA,IAAI,EAAEJ,SAAS,CAACiB,MAAV,CAAiBC;AADN,C;AA6CrB,eAAejB,IAAf","sourcesContent":["import React from \"react\";\r\nimport coverNotAvailable from \"./icons/cover-no-available-image.png\";\r\nimport PropTypes from \"prop-types\";\r\n// Component responsible for rendering books.\r\nclass Book extends React.Component {\r\n  // PropTypes for proper data definition.\r\n  static propTypes = {\r\n    book: PropTypes.object.isRequired\r\n  };\r\n  render() {\r\n    const { book, changeShelf } = this.props;\r\n    // If image is not available then use \"no cover image\".\r\n    const coverSetup =\r\n      book.imageLinks && book.imageLinks.thumbnail\r\n        ? book.imageLinks.thumbnail\r\n        : coverNotAvailable;\r\n    return (\r\n      // Creating books.\r\n      <li>\r\n        <div className=\"book\">\r\n          <div className=\"book-top\">\r\n            <div className=\"book-cover\">\r\n              <img src={coverSetup} alt={`${book.title} cover`}></img>\r\n            </div>\r\n            <div className=\"book-shelf-changer\">\r\n\r\n              {/* Creating options for books to move. */}\r\n              <select\r\n                value={book.shelf}\r\n                onChange={event => changeShelf(book, event.target.value)}\r\n              >\r\n                <option value=\"move\" disabled>\r\n\r\n                  Move to...\r\n                </option>\r\n                <option value=\"none\"> None </option>\r\n                <option value=\"currentlyReading\"> Currently Reading </option>\r\n                <option value=\"wantToRead\"> Want to Read </option>\r\n                <option value=\"read\"> Read </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          {/* Writing title and authors. */}\r\n          <h3 className=\"book-title\"> {book.title} </h3>\r\n          <h4 className=\"book-authors\"> {book.authors} </h4>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Book;\r\n"]},"metadata":{},"sourceType":"module"}