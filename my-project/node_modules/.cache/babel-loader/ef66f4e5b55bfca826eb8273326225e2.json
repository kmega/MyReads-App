{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\kmega\\\\Desktop\\\\MyReads-App\\\\my-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from\"react\";import\"./App.css\";// Imported BooksAPI as suggested.\nimport*as BooksAPI from\"./BooksAPI\";import{Route}from\"react-router-dom\";import{HashRouter as Router}from\"react-router-dom\";import BookShelf from\"./BookShelf\";import SearchOption from\"./SearchOption\";// State with all books.\nvar BooksApp=/*#__PURE__*/function(_React$Component){_inherits(BooksApp,_React$Component);function BooksApp(){var _getPrototypeOf2;var _this;_classCallCheck(this,BooksApp);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={books:[]};_this.changeShelf=function(targetBook,targetShelf){BooksAPI.update(targetBook,targetShelf).then(function(){targetBook.shelf=targetShelf;_this.setState({// Place the book at respective shelf.\nbooks:_this.state.books.filter(function(t){return t.id!==targetBook.id;}).concat(targetBook)});});};return _this;}_createClass(BooksApp,[{key:\"componentDidMount\",// Render books that are currently at shelves.\nvalue:function componentDidMount(){var _this2=this;BooksAPI.getAll().then(function(books){_this2.setState({books:books});});}// A function that changes shelf based on initial value.\n},{key:\"render\",value:function render(){var _this3=this;// Currently available shelves and their names.\nvar bookStatus=[{status:\"currentlyReading\",statusName:\"Currently Reading\"},{status:\"wantToRead\",statusName:\"Want to Read\"},{status:\"read\",statusName:\"Read\"}];// Here application starts.\nreturn React.createElement(\"div\",{className:\"app\"},React.createElement(\"div\",{className:\"open-search\"},React.createElement(\"a\",{href:\"/search\"},\" Add a book \")),React.createElement(Router,{basename:\"/my-project\"},React.createElement(Route,{exact:true,path:\"/\",render:function render(){return React.createElement(\"div\",{className:\"list-books\"},React.createElement(\"div\",{className:\"list-books-title\"},React.createElement(\"h1\",null,\" MyReads \")),React.createElement(\"div\",{className:\"list-books-content\"},React.createElement(\"div\",null,bookStatus.map(function(shelf,iteration){var books=_this3.state.books.filter(function(book){return book.shelf===shelf.status;});return React.createElement(BookShelf,{key:shelf.status,books:books,shelf:shelf.statusName,changeShelf:_this3.changeShelf});}))));}})),React.createElement(Route,{exact:true,path:\"/search\",render:function render(){return React.createElement(\"div\",{className:\"search-books\"},React.createElement(\"div\",{className:\"search-books-bar\"},React.createElement(\"a\",{className:\"close-search\",href:\"/\"},\"Close\"),React.createElement(\"div\",{className:\"search-books-input-wrapper\"},React.createElement(SearchOption,{type:\"text\",placeholder:\"Search by title or author\",books:_this3.state.books,changeShelf:_this3.changeShelf}))),React.createElement(\"div\",{className:\"search-books-results\"},React.createElement(\"ol\",{className:\"books-grid\"},\" \")));}}));}}]);return BooksApp;}(React.Component);export default BooksApp;","map":{"version":3,"sources":["C:/Users/kmega/Desktop/MyReads-App/my-project/src/App.js"],"names":["React","BooksAPI","Route","HashRouter","Router","BookShelf","SearchOption","BooksApp","state","books","changeShelf","targetBook","targetShelf","update","then","shelf","setState","filter","t","id","concat","getAll","bookStatus","status","statusName","map","iteration","book","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\n// Imported BooksAPI as suggested.\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport BookShelf from \"./BookShelf\";\r\nimport SearchOption from \"./SearchOption\";\r\n// State with all books.\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    books: []\r\n  };\r\n  // Render books that are currently at shelves.\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then(books => {\r\n      this.setState({\r\n        books\r\n      });\r\n    });\r\n  }\r\n  // A function that changes shelf based on initial value.\r\n  changeShelf = (targetBook, targetShelf) => {\r\n    BooksAPI.update(targetBook, targetShelf).then(() => {\r\n      targetBook.shelf = targetShelf;\r\n      this.setState({\r\n        // Place the book at respective shelf.\r\n        books: this.state.books\r\n          .filter(t => t.id !== targetBook.id)\r\n          .concat(targetBook)\r\n      });\r\n    });\r\n  };\r\n  render() {\r\n    // Currently available shelves and their names.\r\n    const bookStatus = [\r\n      {\r\n        status: \"currentlyReading\",\r\n        statusName: \"Currently Reading\"\r\n      },\r\n      {\r\n        status: \"wantToRead\",\r\n        statusName: \"Want to Read\"\r\n      },\r\n      {\r\n        status: \"read\",\r\n        statusName: \"Read\"\r\n      }\r\n    ];\r\n    // Here application starts.\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"open-search\">\r\n          <a href=\"/search\"> Add a book </a>\r\n        </div>\r\n        {/* Creating main route for rendering purposes. */}\r\n        <Router basename=\"/my-project\">\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => (\r\n              <div className=\"list-books\">\r\n                <div className=\"list-books-title\">\r\n                  <h1> MyReads </h1>\r\n                </div>\r\n                <div className=\"list-books-content\">\r\n\r\n                  {/* Render books that initially are at begining. */}\r\n                  <div>\r\n\r\n                    {bookStatus.map((shelf, iteration) => {\r\n                      const books = this.state.books.filter(\r\n                        book => book.shelf === shelf.status\r\n                      );\r\n                      return (\r\n                        <BookShelf\r\n                          key={shelf.status}\r\n                          books={books}\r\n                          shelf={shelf.statusName}\r\n                          changeShelf={this.changeShelf}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          />\r\n        </Router>\r\n        {/* Creating search route for rendering purposes. */}\r\n        <Route\r\n          exact\r\n          path=\"/search\"\r\n          render={() => (\r\n            <div className=\"search-books\">\r\n              <div className=\"search-books-bar\">\r\n                <a className=\"close-search\" href=\"/\">\r\n\r\n                  Close\r\n                </a>\r\n                <div className=\"search-books-input-wrapper\">\r\n                  <SearchOption\r\n                    type=\"text\"\r\n                    placeholder=\"Search by title or author\"\r\n                    books={this.state.books}\r\n                    changeShelf={this.changeShelf}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"search-books-results\">\r\n                <ol className=\"books-grid\"> </ol>\r\n              </div>\r\n            </div>\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n"]},"metadata":{},"sourceType":"module"}